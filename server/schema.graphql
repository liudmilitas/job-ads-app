type Query {
  job(id: ID!): Job
  jobs(limit: Int, offset: Int): JobSubList
  company(id: ID!): Company
  companies: [Company]
}

type JobSubList {
  items: [Job!]!
  count: Int!
}

"""Represents a job posting"""
type Job {
  id: ID!
  """ISO-8601 format"""
  date: String!
  title: String!
  company: Company!
  description: String
}

type Company {
  id: ID!
  name: String!
  description: String
  jobs: [Job]
}



type Mutation {
  createJob(input: CreateJobInput!): Job
  deleteJob(id: ID!): Job
  updateJob(input: UpdateJobInput!): Job
}

input CreateJobInput {
  title: String!
  description: String!
}

input UpdateJobInput {
  id: ID!
  title: String!
  description: String
}